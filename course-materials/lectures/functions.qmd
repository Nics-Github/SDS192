---
title: "Making Functions practice"
author: "Schwab"

editor: visual
---

Making functions

# This function will add

```{r}
adding <- function(x,y){
  total <- sum(c(x,y))
  return(total)
}
```

# This function will multiply

```{r}
multiplying <- function(x,y){
  total <- x*y
  return(total)
}
```

```{r}
multiplying(2,4)
```

This function will multiply or add

Depending in an argument

```{r}
boring_calculator <-function(x,y,operation="add"){
  if(operation %in% "add"){
    total <- x + y
  }
  else if(operation %in% "multiply"){
    total <- x * y
  }
  else{
    stop("Please choose a valid operation")
  }
  return(total)
}
```

```{r}
boring_calculator(1,6, operation="blue")
```

# Filtering a lot

```{r}
auto_filter <- function(data, variable, value){
  library(tidyverse)
  data |>
    filter({{variable}} == value)
}
```

```{r}
auto_filter(data=mtcars, variable = am, value = 0 )
```

```{r}
auto_filter_defaults <- function(data = mtcars, variable = am, value = 1){
  library(tidyverse)
  data |>
    filter({{variable}} == value)
}
```

```{r}
auto_filter_defaults()

```

```{r}
auto_filter_defaults(variable = vs, value= 0)

```

```{r}
load_libraries <- function(){
  library(tidyverse)
  library(janitor)
  library(stringr)
  library()
}

```

## 
