{
  "hash": "037e0265372063b7a6475c0e653169e0",
  "result": {
    "markdown": "---\ntitle: \"map() practice\"\nauthor: \"Schwab\"\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(mosaicData)\n```\n:::\n\n\nDoing problems 1 and 3 from [here](https://mdsr-book.github.io/mdsr3e/07-iteration.html#iteration-exercises)\n\n**Problem 1 (Easy)**: Use the `HELPrct` data from the `mosaicData` to calculate the mean of all numeric variables (be sure to exclude missing values).\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHELPrct |>\n  summarise(\n    across(.cols = where(is.numeric),\n           .fns = ~mean(. , na.rm = TRUE))\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       age anysubstatus     cesd       d1 daysanysub dayslink drugrisk      e2b\n1 35.65342    0.7723577 32.84768 3.059603   75.30738 255.6056 1.887168 2.504673\n     female       i1       i2       id   indtot linkstatus      mcs      pcs\n1 0.2362031 17.90728 24.54746 233.4018 35.72848  0.3781903 31.67668 48.04854\n    pss_fr  sexrisk avg_drinks max_drinks hospitalizations\n1 6.706402 4.642384   17.90728   24.54746         3.059603\n```\n:::\n:::\n\n\n**Problem 3 (Medium)**: Use routines from the `purrr` package and the `HELPrct` data frame from the `mosaicData` package to fit a regression model predicting `cesd` as a function of `age` separately for each of the levels of the `substance` variable. Generate a formatted table (with suitable caption) of results\n(estimates and confidence intervals) for the slope parameter for each level of the grouping variable.\n\n(Hint: Use `group_by()` and `group_modify()` to fit the regression model on each part. Note that `broom::tidy()` is useful in having the output of the model be a data frame.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHELPrct |> select(substance, cesd, age) |>\ngroup_by(substance)|>\n  group_modify(.f = ~broom::tidy( lm(cesd~age, data = .))) |> \n  filter(term ==\"age\") |>\n  mutate(CI_low = estimate - 2*std.error, CI_high = estimate + 2*std.error) |>\n  select(-statistic, - p.value, - std.error) |>\n  kableExtra::kable(caption = \"The likelyhood someone uses a substance increates with age.\", digits = 1)\n```\n\n::: {.cell-output-display}\nTable: The likelyhood someone uses a substance increates with age.\n\n|substance |term | estimate| CI_low| CI_high|\n|:---------|:----|--------:|------:|-------:|\n|alcohol   |age  |      0.3|    0.1|     0.6|\n|cocaine   |age  |     -0.3|   -0.6|     0.0|\n|heroin    |age  |     -0.2|   -0.5|     0.0|\n:::\n:::\n\n\nActivity 2\n\nMake a function that takes a df and a variable then produces a scatter plot of that variable vs cesd. Use it to plot multiple graphs of the first 6 numeric variables HELPrct. [Hint: check out the extended example from 7.7](https://mdsr-book.github.io/mdsr3e/07-iteration.html#extended-example-factors-associated-with-bmi)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mosaicData)\n\nmy_func <- function(data,variable2){\n  my_plot <- data |>\n    ggplot(aes(x = cesd))+\n    aes_string(y = variable2)+\n    geom_point()\n}\n\nnumeric_names_only <- HELPrct |>\n  select(\"age\":\"d1\")|>\n  names()\n\n\nmap(.x = numeric_names_only,\n    .f = my_func,\n    data= HELPrct\n      )|>\n  patchwork::wrap_plots(ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`.\nℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 207 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-7-examples_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mosaicData)\n\nmy_func <- function(data,variable2){\n  my_plot <- data |>\n    ggplot(aes(x = cesd, y = {{variable2}}))+\n    geom_point()\n}\n\nmy_func(HELPrct, age)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(NHANES)\n\nbmi_plot <- function(.data, x_var) {\n  ggplot(.data, aes(y = BMI)) +\n    aes_string(x = x_var) + \n    geom_jitter(alpha = 0.3) + \n    geom_smooth() + \n    labs(\n      title = paste(\"BMI by\", x_var),\n      subtitle = \"NHANES\",\n      caption = \"US National Center for Health Statistics (NCHS)\"\n    )\n}\nbmi_plot(NHANES, \"Age\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 366 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-7-examples_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nc(\"Age\", \"HHIncomeMid\", \"PhysActiveDays\", \n  \"TVHrsDay\", \"AlcoholDay\", \"Pulse\") |>\n  map(bmi_plot, .data = NHANES) |>\n  patchwork::wrap_plots(ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 366 rows containing non-finite outside the scale range\n(`stat_smooth()`).\nRemoved 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1148 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1148 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5442 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Failed to fit group -1.\nCaused by error in `smooth.construct.cr.smooth.spec()`:\n! x has insufficient unique values to support 10 knots: reduce k.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5442 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 366 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 366 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5113 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 5113 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1502 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1502 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](chapter-7-examples_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "chapter-7-examples_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}