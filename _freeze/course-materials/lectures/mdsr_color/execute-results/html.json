{
  "hash": "69c087dd21448f5cd002d925ad7a8a33",
  "result": {
    "markdown": "---\ntitle: \"Color\"\nauthor: \"Ben Baumer\"\nformat: \n  revealjs:\n    controls: \n      true\n\neditor: visual\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\n\n\n\n------------------------------------------------------------------------\n\n# Color\n\n------------------------------------------------------------------------\n\n## Colors can be added to aestheitcs, or for the whole graph. \n\nType ?geom_point() to see which asthetics are allowed for the point plot\n\n## Three color schemes\n\n-   Sequential\n\n    -   Single hue\n    -   Multi-hue\n\n-   Diverging\n\n-   Categorical\n\n![](https://media.giphy.com/media/3oriO1VZF0t5PyQVlC/giphy.gif){.absolute top=\"80\" right=\"50\"}\n\n------------------------------------------------------------------------\n\nBig Idea: color **choices matter** and there are better and worse choices\n\n\n\n\n\n------------------------------------------------------------------------\n\n## Sequential, single hue\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/cali_single_hue-1.png){width=960}\n:::\n:::\n\n\nMap [**saturation**](https://en.wikipedia.org/wiki/Hue) to numeric variable\n\nNo more than 5--6 levels\n\nPeople interpret high saturation as more\n\n------------------------------------------------------------------------\n\n## Sequential, double hue\n\n-   Map [**hue**](https://en.wikipedia.org/wiki/Hue) to numeric variable\n\n-   Generally, no more than 2 anchor colors\n\n-   People interpret darker hue as more\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/cali-multihue-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Diverging\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/cali-diverging-1.png){width=960}\n:::\n:::\n\n\nTwo colors used to indicate extremes of a range\n\nNeutral color in the middle\n\ndistinguish between zero and missing\n\n------------------------------------------------------------------------\n\n## Categorical\n\nDifferent color = different category\n\nchoose colors that are - perceptually distant - roughly the same saturation\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/cali-categorical-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Built-in color palettes\n\n-   [`Cynthia Brewer`](http://www.colorbrewer2.org)\n\n-   `RColorBrewer` package\n\n-   `scale_color_brewer()` function\n\n-   [`viridis`](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html) palettes mimic `matplotlib` Python library\n\n------------------------------------------------------------------------\n\n## Sorry, no rainbows\n\n![](https://media.giphy.com/media/3o7aD0Meng5BT8IejK/giphy.gif)\n\n-   NO RAINBOWS!!\n\n-   [Why rainbow colors aren't the best option for data visualizations](https://www.poynter.org/archive/2013/why-rainbow-colors-arent-always-the-best-options-for-data-visualizations/)\n\n-   [How The Rainbow Color Map Misleads](https://eagereyes.org/basics/rainbow-color-map)\n\n[dataviz cheatsheet](https://policyviz.com/2018/08/07/dataviz-cheatsheet/)\n\n------------------------------------------------------------------------\n\n## `ggplot2` default color\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/norm_plot-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## ColorBrewer `Purples` palette\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/norm_plot_distiller-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## ColorBrewer `YlGn` palette\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/norm_plot_distiller2-1.png){width=960}\n:::\n:::\n\n\n## Viridis palette\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/norm_plot_viridis-1.png){width=960}\n:::\n:::\n\n\n# Themes\n\ninstall.packages(\"ggthemes\")\n\n------------------------------------------------------------------------\n\n## Take any ggplot...\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/gg1-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## ...and change themes with `ggthemes`\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](figures/gg-theme-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n[More themes](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}